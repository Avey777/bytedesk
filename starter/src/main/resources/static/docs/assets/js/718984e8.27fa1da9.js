"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3449],{19971:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(30758);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}},24961:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/goodsinfo-c470a78b4eb26aed2a74895b2c872726.png"},96721:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"development/goodsinfo","title":"Product Information Integration","description":"This page explains how to pass product information from your business system to the customer service system, especially suitable for e-commerce websites, helping customer service quickly understand the product details that users are inquiring about.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/development/goodsinfo.md","sourceDirName":"development","slug":"/development/goodsinfo","permalink":"/docs/docs/development/goodsinfo","draft":false,"unlisted":false,"editUrl":"https://github.com/bytedesk/bytedesk-docs/blob/main/docs/development/goodsinfo.md","tags":[],"version":"current","lastUpdatedBy":"jack ning","lastUpdatedAt":1753869991000,"sidebarPosition":7,"frontMatter":{"sidebar_label":"Product Information","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Order Information","permalink":"/docs/docs/development/order_info"},"next":{"title":"SaaS","permalink":"/docs/docs/development/saas"}}');var o=i(86070),r=i(19971);const s={sidebar_label:"Product Information",sidebar_position:7},c="Product Information Integration",a={},d=[{value:"Why do we need product information integration?",id:"why-do-we-need-product-information-integration",level:2},{value:"Integration Method",id:"integration-method",level:2},{value:"Product Information Data Structure",id:"product-information-data-structure",level:3},{value:"Configuration Example",id:"configuration-example",level:3},{value:"Product Information Display Effect",id:"product-information-display-effect",level:3},{value:"H5 Link Integration Method",id:"h5-link-integration-method",level:2},{value:"H5 Link Format",id:"h5-link-format",level:3},{value:"Usage Scenarios",id:"usage-scenarios",level:3},{value:"Implementation Steps",id:"implementation-steps",level:3},{value:"Important Notes",id:"important-notes",level:3},{value:"Key Parameter Descriptions",id:"key-parameter-descriptions",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Data Preparation",id:"1-data-preparation",level:3},{value:"2. Implementation Techniques",id:"2-implementation-techniques",level:3},{value:"3. User Experience Optimization",id:"3-user-experience-optimization",level:3},{value:"Common Questions",id:"common-questions",level:2},{value:"Q1: How to update product information when users browse different products?",id:"q1-how-to-update-product-information-when-users-browse-different-products",level:3},{value:"Q2: What are the requirements for images in product information?",id:"q2-what-are-the-requirements-for-images-in-product-information",level:3},{value:"Q3: How to handle consultations for multiple products?",id:"q3-how-to-handle-consultations-for-multiple-products",level:3},{value:"Q4: How to synchronize product price changes to the customer service system?",id:"q4-how-to-synchronize-product-price-changes-to-the-customer-service-system",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"Summary",id:"summary",level:2},{value:"Complete Example Code",id:"complete-example-code",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"product-information-integration",children:"Product Information Integration"})}),"\n",(0,o.jsx)(n.p,{children:"This page explains how to pass product information from your business system to the customer service system, especially suitable for e-commerce websites, helping customer service quickly understand the product details that users are inquiring about."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Demo link: ",(0,o.jsx)(n.a,{href:"https://weiyuai.cn/reactdemo",children:"Product Information Integration Demo"})]}),"\n",(0,o.jsx)(n.li,{children:"Demo code:"}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/Bytedesk/bytedesk-web/blob/master/examples/react-demo/src/pages/goodsInfoDemo.tsx",children:"Product Information Integration Example-React"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/Bytedesk/bytedesk-web/blob/master/examples/vue-demo/src/pages/goodsInfoDemo.vue",children:"Product Information Integration Example-Vue"})}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["Note: Please ensure you have completed the basic functionality integration in the ",(0,o.jsx)(n.a,{href:"/docs/docs/channel/react",children:"React Integration Guide"})," or ",(0,o.jsx)(n.a,{href:"/docs/docs/channel/vue",children:"Vue Integration Guide"})," before proceeding with product information integration."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Product Information Integration Example",src:i(24961).A+"",width:"3232",height:"1740"})}),"\n",(0,o.jsx)(n.h2,{id:"why-do-we-need-product-information-integration",children:"Why do we need product information integration?"}),"\n",(0,o.jsx)(n.p,{children:"In e-commerce scenarios, when users consult customer service, they often ask questions about specific products. Seamlessly passing product information to customer service can:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Let customer service immediately understand the product the user is browsing"}),"\n",(0,o.jsx)(n.li,{children:"Save communication time and improve service efficiency"}),"\n",(0,o.jsx)(n.li,{children:"Enable customer service to provide more accurate answers for specific products"}),"\n",(0,o.jsx)(n.li,{children:"Improve user satisfaction and conversion rates"}),"\n",(0,o.jsx)(n.li,{children:"Facilitate customer service recommendations for related or alternative products"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"integration-method",children:"Integration Method"}),"\n",(0,o.jsxs)(n.p,{children:["The Weiyu customer service system supports passing product information through configuration parameters. When initializing the customer service component, pass product-related information through the ",(0,o.jsx)(n.code,{children:"chatConfig.goodsInfo"})," configuration item."]}),"\n",(0,o.jsx)(n.h3,{id:"product-information-data-structure",children:"Product Information Data Structure"}),"\n",(0,o.jsx)(n.p,{children:"Product information is passed as a JSON string containing the following fields:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"// Product information data structure\ninterface GoodsInfo {\n    uid: string;         // Product ID\n    title: string;       // Product title\n    image: string;       // Product image URL\n    description: string; // Product description\n    price: number;       // Product price\n    url: string;         // Product detail page URL\n    tagList: string[];   // Product tag list\n    extra: string;       // Additional information (JSON string)\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"configuration-example",children:"Configuration Example"}),"\n",(0,o.jsx)(n.p,{children:"The following is a complete configuration example demonstrating how to pass product information to the customer service system:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"const config = {\n  // Other configuration items\n  placement: 'bottom-right',\n  autoPopup: false,\n  marginBottom: 20,\n  marginSide: 20,\n  \n  // Chat configuration\n  chatConfig: {\n    org: 'df_org_uid',       // Your organization ID\n    t: \"1\",                   \n    sid: 'df_wg_uid',         // Session ID\n    \n    // Basic user information (optional)\n    visitorUid: 'visitor_001',\n    nickname: 'Visitor Xiao Ming',\n    avatar: 'https://example.com/avatar.jpg',\n    \n    // Product information - Core part\n    goodsInfo: JSON.stringify({\n      uid: 'goods_001',                   // Product ID\n      title: 'BYD Yangwang U7 Luxury Pure Electric Sedan',  // Product title\n      image: 'https://example.com/car.jpg', // Product image\n      description: 'The BYD Yangwang U7 is a luxury pure electric sedan using the latest generation Blade Battery technology...', // Product description\n      price: 299900,                      // Product price (unit: yuan)\n      url: 'https://example.com/product/001', // Product detail page link\n      tagList: ['New Energy', 'Luxury Sedan', 'Smart Driving', 'Long Range'], // Product tags\n      extra: JSON.stringify({             // Additional custom information\n        sku: 'SKU12345',\n        stock: 100,\n        discount: '8.8\u6298'\n      })\n    })\n  }\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"product-information-display-effect",children:"Product Information Display Effect"}),"\n",(0,o.jsx)(n.p,{children:"When you correctly configure product information, the customer service system will display a product information card in the customer service workbench showing the product the user is inquiring about, including product image, title, price, description, and other key information, making it convenient for customer service to quickly understand product details and provide targeted services."}),"\n",(0,o.jsx)(n.h2,{id:"h5-link-integration-method",children:"H5 Link Integration Method"}),"\n",(0,o.jsx)(n.p,{children:"In addition to component integration, Weiyu customer service also provides a simpler H5 link integration method, suitable for mobile H5 pages or scenarios requiring quick integration."}),"\n",(0,o.jsx)(n.h3,{id:"h5-link-format",children:"H5 Link Format"}),"\n",(0,o.jsx)(n.p,{children:"The basic link format is as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"https://www.weiyuai.cn/chat/?org=Your Organization ID&t=1&sid=Session ID&goodsInfo=Product Information JSON\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"goodsInfo"})," parameter needs URL encoding, as shown in the following example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// 1. Prepare product information object\nconst goodsInfo = {\n  uid: 'goods_001',                      // Product ID\n  title: 'BYD Yangwang U7 Luxury Pure Electric Sedan', // Product title\n  image: 'https://www.weiyuai.cn/assets/images/car/yu7.jpg', // Product image\n  description: 'The BYD Yangwang U7 is a luxury pure electric sedan', // Description\n  price: 299900,                         // Price\n  tagList: ['New Energy', 'Luxury Sedan']        // Tags\n};\n\n// 2. Convert to JSON string and URL encode\nconst goodsInfoStr = encodeURIComponent(JSON.stringify(goodsInfo));\n\n// 3. Concatenate complete URL\nconst chatUrl = `https://www.weiyuai.cn/chat/?org=df_org_uid&t=1&sid=df_wg_uid&goodsInfo=${goodsInfoStr}`;\n\n// 4. Navigate to customer service consultation page\nwindow.location.href = chatUrl;\n// Or create a link\n// <a href=\"${chatUrl}\" target=\"_blank\">Contact Customer Service</a>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"usage-scenarios",children:"Usage Scenarios"}),"\n",(0,o.jsx)(n.p,{children:"H5 link integration is particularly suitable for the following scenarios:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:'"Contact Customer Service" buttons on product detail pages'}),"\n",(0,o.jsx)(n.li,{children:"Product consultation links in marketing SMS or emails"}),"\n",(0,o.jsx)(n.li,{children:"Social media promotion links"}),"\n",(0,o.jsx)(n.li,{children:"Third-party platforms that cannot implement complex JS integration"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"implementation-steps",children:"Implementation Steps"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Get Product Information"}),": Get current product details from your business system"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Build Parameter Object"}),": Build product information JSON object according to format"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Encode and Concatenate"}),": URL encode the JSON string and concatenate it to the base link"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Create Link or Button"}),": Add link or button on the product page pointing to the generated URL"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"important-notes",children:"Important Notes"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Ensure all URL parameters are properly encoded, especially Chinese characters and special characters"}),"\n",(0,o.jsx)(n.li,{children:"Image URLs should use HTTPS protocol to ensure security"}),"\n",(0,o.jsx)(n.li,{children:"Simplify product information, only pass necessary fields, avoid overly long URLs"}),"\n",(0,o.jsx)(n.li,{children:"Consider adding tracking parameters to links for easy conversion rate statistics"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"key-parameter-descriptions",children:"Key Parameter Descriptions"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"uid"}),": Unique identifier for the product, recommended to use the product ID from your system"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"title"}),": Product name or title"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"image"}),": Main product image URL, recommended to use high-definition images"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"description"}),": Product description information, can be a brief introduction"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"price"}),": Product price, unit is yuan"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"}),": Complete URL of the product detail page, customer service can click to view"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"tagList"}),": Product tag array, used to quickly understand product features"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"extra"}),": Additional custom fields, passed as JSON string"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,o.jsx)(n.h3,{id:"1-data-preparation",children:"1. Data Preparation"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Optimize Images"}),": Ensure product images are optimized, recommended size not exceeding 800\xd7800 pixels"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Concise Descriptions"}),": Product descriptions should be concise and highlight core selling points"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Necessary Tags"}),': Use tags to mark key product features, such as "New", "Hot Sale", "Limited Time", etc.']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Complete Links"}),": Provide complete product URLs for easy customer service access to product pages"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"2-implementation-techniques",children:"2. Implementation Techniques"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Dynamic Passing"}),": Dynamically update the ",(0,o.jsx)(n.code,{children:"goodsInfo"})," parameter when users browse different products"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Load on Demand"}),': Only initialize the customer service component when users click the "Contact Customer Service" button']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Stock Check"}),": Pass stock information in the ",(0,o.jsx)(n.code,{children:"extra"})," field for easy customer service to inform users"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Multi-Product Support"}),": Design mechanisms that allow users to consult multiple products simultaneously"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"3-user-experience-optimization",children:"3. User Experience Optimization"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Button Placement"}),': Place "Contact Customer Service" buttons in prominent positions on product detail pages']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Preset Questions"}),": Preset common questions for specific products to help users quickly initiate consultations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Real-time Updates"}),": Update information passed to customer service in time when product prices or stock changes"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Feedback Mechanism"}),": Collect user feedback after consultation to optimize service processes"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"common-questions",children:"Common Questions"}),"\n",(0,o.jsx)(n.h3,{id:"q1-how-to-update-product-information-when-users-browse-different-products",children:"Q1: How to update product information when users browse different products?"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"A"}),": You need to re-initialize the customer service component when users switch products, or dynamically pass current product information when opening the chat window. Example code:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:"// When user switches to new product\nconst switchToProduct = (newProduct) => {\n  setCurrentProduct(newProduct);\n  \n  // Open chat window and pass new product information\n  window.bytedesk?.showChat({\n    chatConfig: {\n      goodsInfo: JSON.stringify({\n        uid: newProduct.uid,\n        title: newProduct.title,\n        // ...other product information\n      })\n    }\n  });\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"q2-what-are-the-requirements-for-images-in-product-information",children:"Q2: What are the requirements for images in product information?"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"A"}),": Product images should:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Use HTTPS links to ensure security"}),"\n",(0,o.jsx)(n.li,{children:"Be optimized for fast loading"}),"\n",(0,o.jsx)(n.li,{children:"Clearly showcase product features"}),"\n",(0,o.jsx)(n.li,{children:"Recommended size not exceeding 800\xd7800 pixels"}),"\n",(0,o.jsx)(n.li,{children:"Ensure image URLs are publicly accessible"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"q3-how-to-handle-consultations-for-multiple-products",children:"Q3: How to handle consultations for multiple products?"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"A"}),": There are several methods to handle multi-product consultations:"]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:'Update the passed product information each time users click "Contact Customer Service" buttons for different products'}),"\n",(0,o.jsxs)(n.li,{children:["Use the ",(0,o.jsx)(n.code,{children:"extra"})," field to pass brief information about multiple products"]}),"\n",(0,o.jsx)(n.li,{children:'Implement a "Shopping Cart Consultation" feature in your business system to pass multiple product information to customer service at once'}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"q4-how-to-synchronize-product-price-changes-to-the-customer-service-system",children:"Q4: How to synchronize product price changes to the customer service system?"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"A"}),": You should ensure that the latest product information, including real-time prices, is obtained when opening the customer service chat window. If prices change during the conversation, you can pass updated product information by calling the ",(0,o.jsx)(n.code,{children:"showChat"})," method again."]}),"\n",(0,o.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,o.jsx)(n.p,{children:"In addition to basic product information passing, you can also implement the following advanced features:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Product Recommendations"}),": Customer service can recommend related products to users"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Real-time Stock"}),": Display real-time stock status in conversations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Price Notifications"}),": Notify users when product prices change"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Promotional Combinations"}),": Show promotional combinations for specific products"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Purchase History"}),": Provide personalized services based on user purchase history"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(n.p,{children:"Product information integration is an important part of improving e-commerce customer service experience. By seamlessly passing product details to the customer service system, communication efficiency and service quality can be greatly improved, thereby enhancing user satisfaction and conversion rates. During implementation, please pay attention to keeping data concise, updating in time, and optimizing user experience."}),"\n",(0,o.jsx)(n.h2,{id:"complete-example-code",children:"Complete Example Code"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/Bytedesk/bytedesk-web/blob/master/examples/react-demo/src/pages/goodsInfoDemo.tsx",children:"Product Information Integration Example"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);