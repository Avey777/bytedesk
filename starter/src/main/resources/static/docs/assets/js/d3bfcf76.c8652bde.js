"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8904],{19971:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(30758);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}},46593:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/faq_3-ee1fb844c4d105603600b1f47eebaf01.png"},48371:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/faq_1-b9fa9c55366d7dd2c4e1ba438842245b.png"},63009:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"development/viplevel","title":"Personalized Service","description":"This page explains how to implement personalized service experiences for different user levels by using the vipLevel parameter to display different customer service content for different user levels.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/development/viplevel.md","sourceDirName":"development","slug":"/development/viplevel","permalink":"/docs/docs/development/viplevel","draft":false,"unlisted":false,"editUrl":"https://github.com/bytedesk/bytedesk-docs/blob/main/docs/development/viplevel.md","tags":[],"version":"current","lastUpdatedBy":"jack ning","lastUpdatedAt":1753869991000,"sidebarPosition":5,"frontMatter":{"sidebar_label":"Personalized Service","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"User Information","permalink":"/docs/docs/development/userinfo"},"next":{"title":"Order Information","permalink":"/docs/docs/development/order_info"}}');var r=i(86070),s=i(19971);const o={sidebar_label:"Personalized Service",sidebar_position:5},a="Personalized Service",l={},d=[{value:"Why do we need personalized service?",id:"why-do-we-need-personalized-service",level:2},{value:"Integration Method",id:"integration-method",level:2},{value:"Core Parameters",id:"core-parameters",level:3},{value:"Complete Example Code",id:"complete-example-code",level:3},{value:"H5 Link Integration Method",id:"h5-link-integration-method",level:2},{value:"H5 Link Format",id:"h5-link-format",level:3},{value:"Example Code",id:"example-code",level:3},{value:"Admin Backend Configuration",id:"admin-backend-configuration",level:2},{value:"1. Add Extended Questions",id:"1-add-extended-questions",level:3},{value:"2. Add Related Questions",id:"2-add-related-questions",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Important Notes",id:"important-notes",level:2},{value:"Effect Display",id:"effect-display",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"personalized-service",children:"Personalized Service"})}),"\n",(0,r.jsxs)(n.p,{children:["This page explains how to implement personalized service experiences for different user levels by using the ",(0,r.jsx)(n.code,{children:"vipLevel"})," parameter to display different customer service content for different user levels."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Demo link: ",(0,r.jsx)(n.a,{href:"https://weiyuai.cn/reactdemo",children:"Personalized Service Demo"})]}),"\n",(0,r.jsx)(n.li,{children:"Demo code:"}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/Bytedesk/bytedesk-web/blob/master/examples/react-demo/src/pages/vipLevelDemo.tsx",children:"Personalized Service Example-React"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/Bytedesk/bytedesk-web/blob/master/examples/vue-demo/src/pages/vipLevelDemo.vue",children:"Personalized Service Example-Vue"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["Note: Please ensure you have completed the basic configuration of ",(0,r.jsx)(n.a,{href:"/docs/docs/development/userinfo",children:"User Information Integration"})," to better implement personalized service functionality."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Personalized Service Example",src:i(48371).A+"",width:"2914",height:"1424"})}),"\n",(0,r.jsx)(n.h2,{id:"why-do-we-need-personalized-service",children:"Why do we need personalized service?"}),"\n",(0,r.jsx)(n.p,{children:"In actual business scenarios, you may want to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Provide differentiated service content for users of different levels"}),"\n",(0,r.jsx)(n.li,{children:"VIP users receive more detailed or higher-level answers"}),"\n",(0,r.jsx)(n.li,{children:"Display different product introductions based on user levels"}),"\n",(0,r.jsx)(n.li,{children:"Provide different promotional information for users of different levels"}),"\n",(0,r.jsx)(n.li,{children:"Achieve more refined user operations"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Through personalized service functionality, you can provide more accurate and personalized service experiences for users of different levels."}),"\n",(0,r.jsx)(n.h2,{id:"integration-method",children:"Integration Method"}),"\n",(0,r.jsxs)(n.p,{children:["The Weiyu customer service system supports passing user level information through configuration parameters. When initializing the customer service component, pass the ",(0,r.jsx)(n.code,{children:"vipLevel"})," parameter through the ",(0,r.jsx)(n.code,{children:"chatConfig"})," configuration item."]}),"\n",(0,r.jsx)(n.h3,{id:"core-parameters",children:"Core Parameters"}),"\n",(0,r.jsx)(n.p,{children:"The following are the core parameter configurations for personalized service functionality:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"chatConfig: {\n  // Required parameters\n  org: 'df_org_uid',        // Your organization ID\n  t: \"1\",                   // Session type\n  sid: 'df_wg_uid',         // Session ID\n  \n  // User information parameters\n  visitorUid: 'visitor_001',       // User unique ID\n  nickname: 'Visitor Xiao Ming',   // User nickname\n  avatar: 'https://example.com/avatar.jpg', // User avatar URL\n  \n  // VIP level parameter - This is the key to personalized service\n  vipLevel: 4,              // User VIP level, can be an integer from 1-10\n  \n  // Custom fields, can pass any additional information\n  extra: JSON.stringify({\n    userType: 'vip',\n    registerTime: '2025-01-01',\n    // Any other information you want to pass\n  })\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"complete-example-code",children:"Complete Example Code"}),"\n",(0,r.jsx)(n.p,{children:"Below is a complete personalized service example demonstrating how to display different content based on different user levels:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"import { useState } from 'react';\nimport { Button, Card, Typography, Space, Select } from 'antd';\nimport { BytedeskReact } from 'bytedesk-web/react';\n\nconst { Title, Paragraph } = Typography;\nconst { Option } = Select;\n\nconst VipLevelDemo = () => {\n    // Current selected VIP level\n    const [vipLevel, setVipLevel] = useState(1);\n\n    // Configure customer service component\n    const config = {\n        placement: 'bottom-right',\n        autoPopup: false,\n        marginBottom: 20,\n        marginSide: 20,\n        buttonConfig: {\n            show: false,  // Hide default button\n        },\n        chatConfig: {\n            org: 'df_org_uid',    // Replace with your organization ID\n            t: \"1\",\n            sid: 'df_wg_uid',     // Replace with your SID\n            // User information parameters\n            visitorUid: 'visitor_001',\n            nickname: 'Test User',\n            avatar: 'https://example.com/avatar.jpg',\n            \n            // Set VIP level\n            vipLevel: vipLevel,\n            \n            extra: JSON.stringify({\n                userType: 'vip',\n                registerDate: '2025-05-01'\n            })\n        },\n        locale: 'zh-cn',\n    };\n\n    // Switch VIP level\n    const handleVipLevelChange = (level) => {\n        setVipLevel(level);\n    };\n\n    // Open chat window\n    const handleShowChat = () => {\n        console.log(\"Open chat window\");\n        (window).bytedesk?.showChat();\n    };\n\n    return (\n        <div style={{ padding: '24px' }}>\n            <Title level={2}>Personalized Service Demo</Title>\n            <Paragraph>\n                This example demonstrates how to pass user VIP level (vipLevel) to the customer service component through configuration parameters.\n                Select different VIP levels to see different customer service content.\n            </Paragraph>\n\n            <Card style={{ marginTop: '20px' }}>\n                <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n                    <div>\n                        <Title level={4}>Current VIP Level:</Title>\n                        <Select \n                            value={vipLevel} \n                            onChange={handleVipLevelChange}\n                            style={{ width: 200 }}\n                        >\n                            <Option value={1}>Regular User</Option>\n                            <Option value={2}>Bronze Member</Option>\n                            <Option value={3}>Silver Member</Option>\n                            <Option value={4}>Gold Member</Option>\n                            <Option value={5}>Diamond Member</Option>\n                        </Select>\n                    </div>\n                    \n                    <div style={{ textAlign: 'center', marginTop: '16px' }}>\n                        <Button type=\"primary\" size=\"large\" onClick={handleShowChat}>\n                            Contact Customer Service\n                        </Button>\n                    </div>\n                </Space>\n            </Card>\n\n            {/* Import Weiyu customer service component */}\n            <BytedeskReact {...config} />\n        </div>\n    );\n};\n\nexport default VipLevelDemo;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"h5-link-integration-method",children:"H5 Link Integration Method"}),"\n",(0,r.jsx)(n.p,{children:"In addition to component integration, the Weiyu customer service system also supports directly passing VIP level information through URL parameters, suitable for H5 pages or quick integration scenarios."}),"\n",(0,r.jsx)(n.h3,{id:"h5-link-format",children:"H5 Link Format"}),"\n",(0,r.jsx)(n.p,{children:"The basic link format is as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"https://www.weiyuai.cn/chat/?org=Your Organization ID&t=1&sid=Session ID&visitorUid=User ID&nickname=User Nickname&avatar=Avatar URL&vipLevel=User Level&extra=Additional Information JSON\n"})}),"\n",(0,r.jsx)(n.p,{children:"Parameter descriptions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"org"}),": Your organization ID"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"t"}),": Session type, usually 1"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sid"}),": Session ID"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"visitorUid"}),": User unique identifier"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"nickname"}),": User nickname (URL encoding required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"avatar"}),": User avatar URL (URL encoding required)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"vipLevel"}),": User VIP level (integer from 1-10)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"extra"}),": Additional information (JSON string, URL encoding required)"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-code",children:"Example Code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"// 1. Prepare basic user information\nconst userId = 'user12345';\nconst userNickname = 'Zhang San';\nconst userAvatar = 'https://example.com/avatar.jpg';\nconst userVipLevel = 4;  // VIP level\n\n// 2. Prepare additional information (optional)\nconst extraInfo = {\n  userType: 'vip',\n  registerTime: '2025-01-01',\n  memberLevel: 'Gold Member'\n};\n\n// 3. URL encoding processing\nconst encodedNickname = encodeURIComponent(userNickname);\nconst encodedAvatar = encodeURIComponent(userAvatar);\nconst encodedExtra = encodeURIComponent(JSON.stringify(extraInfo));\n\n// 4. Concatenate complete URL\nconst chatUrl = `https://www.weiyuai.cn/chat/?org=df_org_uid&t=1&sid=df_wg_uid&visitorUid=${userId}&nickname=${encodedNickname}&avatar=${encodedAvatar}&vipLevel=${userVipLevel}&extra=${encodedExtra}`;\n\n// 5. Use this link for navigation or generate a button\nwindow.location.href = chatUrl;\n// Or create a link\n// <a href=\"${chatUrl}\">Contact Customer Service</a>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"admin-backend-configuration",children:"Admin Backend Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"1-add-extended-questions",children:"1. Add Extended Questions"}),"\n",(0,r.jsx)(n.p,{children:"In the admin backend, you can configure different answer content for different VIP levels:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Enter the FAQ management in the admin backend"}),"\n",(0,r.jsx)(n.li,{children:'Click "Add Extended Question"'}),"\n",(0,r.jsx)(n.li,{children:"Set the corresponding VIP level in the question configuration"}),"\n",(0,r.jsx)(n.li,{children:"Configure different answer content for different levels"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Add Extended Question",src:i(48371).A+"",width:"2914",height:"1424"})}),"\n",(0,r.jsx)(n.h3,{id:"2-add-related-questions",children:"2. Add Related Questions"}),"\n",(0,r.jsx)(n.p,{children:"You can also configure related questions for different VIP levels:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"On the question detail page"}),"\n",(0,r.jsx)(n.li,{children:'Click "Add Related Question"'}),"\n",(0,r.jsx)(n.li,{children:"Set related questions corresponding to different VIP levels"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Add Related Question",src:i(73880).A+"",width:"2928",height:"1726"})}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Level Division"}),": It is recommended to divide VIP levels into 1-10 levels for easy management and expansion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Content Differentiation"}),": Ensure there are obvious value differences in content between different levels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Dynamic Adjustment"}),": Adjust content at each level in time based on user feedback"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Smooth Transition"}),": Set reasonable content transitions between levels"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Data Statistics"}),": Regularly analyze usage patterns of users at different levels"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Level Range"}),": The ",(0,r.jsx)(n.code,{children:"vipLevel"})," parameter is recommended to use integers from 1-10"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Content Maintenance"}),": Regularly check and update content at each level"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compatibility Handling"}),": For users without set levels, the system will use basic content by default"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Update Mechanism"}),": When user levels change, the customer service component needs to be re-initialized to apply new level information"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"effect-display",children:"Effect Display"}),"\n",(0,r.jsx)(n.p,{children:"Users of different VIP levels will see different answer content:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{alt:"VIP Level Effect 1",src:i(46593).A+"",width:"2900",height:"1316"}),"\n",(0,r.jsx)(n.img,{alt:"VIP Level Effect 2",src:i(63502).A+"",width:"2888",height:"1490"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},63502:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/faq_4-061042b5b491fc8b6bf561ebdaf04a30.png"},73880:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/faq_2-c9da3d1b6be74322644a666f376daeb3.png"}}]);